<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PoShLog.Sinks.Http</name>
    </assembly>
    <members>
        <member name="T:PoShLog.Sinks.Http.CmdLets.AddSinkHttp">
            <summary>
            <para type="synopsis">Writes log events into given server over the network using HTTP</para>
            <para type="description">Adds a non-durable sink that sends log events using HTTP POST over the network.</para>
            <para type="description">A non-durable sink will lose data after a system or process restart.</para>
            </summary>
            <example>
            <code>PS> New-Logger | Add-SinkHttp -RequestUri 'https://requestbin.net/r/6y06j5z8' | Start-Logger</code>
            </example>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.LoggerConfig">
            <summary>
            <param type="description">Instance of LoggerConfiguration.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.RequestUri">
            <summary>
            <param type="description">The URI the request is sent to.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.BatchPostingLimit">
            <summary>
            <param type="description">The maximum number of events to post in a single batch. Default value is 1000.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.QueueLimit">
            <summary>
            <param type="description">The maximum number of events stored in the queue in memory, waiting to be posted over the network. Default value is infinitely.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.Period">
            <summary>
            <param type="description">The time to wait between checking for event batches. Default value is 2 seconds.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.TextFormatter">
            <summary>
            <param type="description">he formatter rendering individual log events into text, for example JSON. Default value is <see cref="T:Serilog.Sinks.Http.TextFormatters.NormalRenderedTextFormatter" />.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.BatchFormatter">
            <summary>
            <param type="description">The formatter batching multiple log events into a payload that can be sent over the network. Default value is <see cref="T:Serilog.Sinks.Http.BatchFormatters.DefaultBatchFormatter" />.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.RestrictedToMinimumLevel">
            <summary>
            <param type="description">The minimum level for events passed through the sink. Default value is <see cref="F:Serilog.Events.LevelAlias.Minimum" />.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.HttpClient">
            <summary>
            <param type="description">A custom <see cref="T:Serilog.Sinks.Http.IHttpClient" /> implementation. Default value is <see cref="T:System.Net.Http.HttpClient" />.</param>
            </summary>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.Configuration">
            <summary>
            <param type="description">Configuration passed to HttpClient. Parameter is either manually specified when configuring the sink in source code or automatically passed in when configuring the sink using <see href="https://www.nuget.org/packages/Serilog.Settings.Configuration">Serilog.Settings.Configuration</see>.</param>
            </summary>
        </member>
        <member name="M:PoShLog.Sinks.Http.CmdLets.AddSinkHttp.ProcessRecord">
            <inheritdoc />
        </member>
        <member name="T:PoShLog.Sinks.Http.CmdLets.GetApiKeyHttpClient">
            <summary>
            <para type="synopsis">Gets instance of <see cref="T:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient"/></para>
            <para type="description">Gets instance of <see cref="T:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient"/> that is then used by Add-SinkHttp cmdlet.</para>
            </summary>
            <example>
            <code>PS> New-Logger | Add-SinkHttp -RequestUri 'https://requestbin.net/r/6y06j5z8' -HttpClient (Get-ApiKeyHttpClient -ApiKey '...') | Start-Logger</code>
            </example>
        </member>
        <member name="P:PoShLog.Sinks.Http.CmdLets.GetApiKeyHttpClient.ApiKey">
            <summary>
            <param type="description">Api key to be used in X-Api-key header</param>
            </summary>
        </member>
        <member name="M:PoShLog.Sinks.Http.CmdLets.GetApiKeyHttpClient.ProcessRecord">
            <inheritdoc />
        </member>
        <member name="T:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient">
            <summary>
            HttpClient that authenticates each request using X-Api-key header
            </summary>
        </member>
        <member name="M:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient.#ctor">
            <summary>
            Creates instance of <see cref="T:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient"/>
            </summary>
        </member>
        <member name="M:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient.#ctor(System.String)">
            <summary>
            Creates instance of <see cref="T:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient"/> with initial api key
            </summary>
            <param name="apiKey"></param>
        </member>
        <member name="M:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient.Configure(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Configures the HTTP client.
            </summary>
            <param name="configuration">The application configuration properties.</param>
        </member>
        <member name="M:PoShLog.Sinks.Http.HttpClients.ApiKeyHttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
            <summary>
             Sends a POST request to the specified Uri as an asynchronous operation.
            </summary>
            <param name="requestUri">The Uri the request is sent to.</param>
            <param name="content">The HTTP request content sent to the server.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
